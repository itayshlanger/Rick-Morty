stages:
  - setup
  - build
  - deploy
  - test

before_script:
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.23.3/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - mv ./kubectl /usr/local/bin/kubectl
  - curl -Lo kind https://github.com/kubernetes-sigs/kind/releases/download/v0.14.0/kind-linux-amd64
  - chmod +x kind
  - mv kind /usr/local/bin/kind

setup_k8s_cluster:
  stage: setup
  script:
    - kind create cluster --name gitlab-cluster
    - kubectl cluster-info

build_image:
  stage: build
  script:
    - docker build -t rick-and-morty-api:latest ./app

deploy_application:
  stage: deploy
  script:
    - kubectl apply -f yamls/deployment.yaml
    - kubectl apply -f yamls/service.yaml
    - kubectl apply -f yamls/ingress.yaml

test_endpoints:
  stage: test
  script:
    - EXTERNAL_IP=$(kubectl get svc my-app-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    - curl http://$EXTERNAL_IP/healthcheck || exit 1
