stages:
  - build
  - deploy
  - test
  - cleanup

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  KUBECONFIG: /kube/config  

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind

  script:
    - docker build -t $DOCKER_HUB_USERNAME/rick-and-morty:$CI_COMMIT_SHA app/.
    - echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin
    - docker push $DOCKER_HUB_USERNAME/rick-and-morty:$CI_COMMIT_SHA

deploy_to_cluster:
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    - export KUBECONFIG=$KUBECONFIG  # Ensure the Kubernetes config is used
  tags:
    - rick-and-morty
  script:
    - 'sed -i "s|image: .*|image: ${DOCKER_HUB_USERNAME}/rick-and-morty:$CI_COMMIT_SHA|g" yamls/deployment.yaml'
    - kubectl apply -f yamls/
    - kubectl rollout status deployment/rick-and-morty-api
  dependencies:
    - build

test_application:
  stage: test
  image: bitnami/kubectl:latest  
  tags:
    - rick-and-morty
  script:
    - minikube tunnel &  
    - sleep 10  
    - curl -f http://rick-and-morty.local/healthcheck || exit 1
    - pkill -f "minikube tunnel"  
  dependencies:
    - deploy_to_cluster

cleanup:
  stage: cleanup
  image: bitnami/kubectl:latest
  before_script:
    - export KUBECONFIG=$KUBECONFIG  
  tags:
    - rick-and-morty
  script:
    - kubectl delete -f yamls/  
  when: always  
