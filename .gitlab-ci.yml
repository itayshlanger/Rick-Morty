stages:
  - build
  - deploy
  - test


variables:
  IMAGE_TAG: rick-and-morty-api:$CI_COMMIT_SHA # Unique tag for each commit


build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $IMAGE_TAG app/.
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
    - docker push $IMAGE_TAG
  tags:
    - rick-and-morty


deploy_to_cluster:
  stage: deploy
  script:

    - 'sed -i "s|image: .*|image: $DOCKER_IMAGE:$IMAGE_TAG|g" yamls/deployment.yaml'
    - kubectl apply -f yamls/.
  tags:
    - rick-and-morty

test_application:
  stage: test
  script:
    # Wait for the application to be ready
    - kubectl rollout status deployment/rick-and-morty-api
    - EXTERNAL_IP=$(kubectl get svc rick-and-morty-api -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
    - curl -f http://$EXTERNAL_IP/healthcheack || exit 1
  tags:
    - rick-and-morty
